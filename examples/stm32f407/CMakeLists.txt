cmake_minimum_required(VERSION 3.28)
project(micro_bootloader_stm32f407_example CXX C ASM)
set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

include(cmake/helpers.cmake)

include(CTest)
enable_testing()

add_library(config_base INTERFACE)
add_library(bootloader_core OBJECT EXCLUDE_FROM_ALL)
add_library(test_base OBJECT)

add_library(Bootloader::config_base ALIAS config_base)
add_library(Bootloader::core_impl ALIAS bootloader_core)
add_library(Bootloader::test_base ALIAS test_base)

add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/../../source ${CMAKE_CURRENT_BINARY_DIR}/bootloader)
add_subdirectory(libs/flash_layout)
if(ON_TARGET)
add_subdirectory(libs/libc)
add_subdirectory(cube)
add_subdirectory(sources)
else()
add_subdirectory(qemu)
endif()


_get_all_cmake_targets(all_targets ${CMAKE_CURRENT_LIST_DIR})
message(STATUS "all targets : ${all_targets}")
foreach (target ${all_targets})
    get_target_property(target_type ${target} TYPE)
    if (${target_type} MATCHES "EXECUTABLE")
        message(STATUS "target ${target} ${target_type}")
        target_link_options(${target} PRIVATE -Wl,-Map=${target}.map)
        set_target_properties(${target} PROPERTIES ADDITIONAL_CLEAN_FILES $<TARGET_FILE_BASE_NAME:${target}>.map)
    endif ()
endforeach ()
